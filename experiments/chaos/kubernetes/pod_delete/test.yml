---
- hosts: localhost
  connection: local

  vars:
    c_experiment: "pod-delete"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_interval: "{{ lookup('env','CHAOS_INTERVAL') }}"
    c_util: "/chaoslib/chaoskube/pod_failure_by_chaoskube.yaml"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"

  tasks:
    - block:

        ## GENERATE EXP RESULT NAME
        - block:

            - name: Construct chaos result name (experiment_name)
              set_fact:
                c_experiment: "{{ lookup('env','CHAOSENGINE') }}-{{ c_experiment }}"

          when: lookup('env','CHAOSENGINE')    

        ## RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/fcm/update_chaos_result_resource.yml
          vars:
            status: 'SOT'
            namespace: "{{ a_ns }}"

        ## PRE-CHAOS APPLICATION LIVENESS CHECK

        - name: Verify that the AUT (Application Under Test) is running 
          include_tasks: "/utils/k8s/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}" 
            app_lkey: "{{ a_label.split('=')[0] }}"
            app_lvalue: "{{ a_label.split('=')[1] }}"       
            delay: 2
            retries: 90

        ## FAULT INJECTION 

        - include_tasks: "{{ c_util }}"
          vars:
            namespace: "{{ a_ns }}"
            label: "{{ a_label }}"
            chaos_duration: "{{ c_duration }}"
            chaos_interval: "{{ c_interval }}"

        ## POST-CHAOS APPLICATION LIVENESS CHECK

        - name: Verify AUT liveness post fault-injection
          include_tasks: "/utils/k8s/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}" 
            app_lkey: "{{ a_label.split('=')[0] }}"
            app_lvalue: "{{ a_label.split('=')[1] }}"       
            delay: 2
            retries: 90        

        - set_fact:
            flag: "pass"

      rescue: 
        - set_fact: 
            flag: "fail"

      always: 

        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
 
        - include_tasks: /utils/fcm/update_chaos_result_resource.yml
          vars:
            status: 'EOT'
            namespace: "{{ a_ns }}"
