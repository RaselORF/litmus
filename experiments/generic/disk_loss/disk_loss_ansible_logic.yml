- hosts: localhost
  connection: local

  vars:
    a_check: "{{ lookup('env', 'APP_CHECK') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_experiment: disk-loss
    cloud_platform: "{{ lookup('env','CLOUD_PLATFORM') }}"
    c_ns: "{{ lookup('env','CHAOS_NAMESPACE') }}"
    disk_name: "{{ lookup('env','DISK_NAME') }}"
    gcp_account_name: "{{ lookup('env','GCP_SERVICE_ACC_NAME') }}"
    gcp_account_ns: "{{ lookup('env','GCP_SERVICE_ACC_NAMESPACE') }}"
    node_name: "{{ lookup('env','NODE_NAME') }}"
    project_id: "{{ lookup('env','PROJECT_ID') }}"
    zone_name: "{{ lookup('env','ZONE_NAME') }}"

  tasks:

    - block:
        - include: disk_loss_ansible_prerequisites.yml

        - include_vars:
            file: chaosutil.yml 

        ## GENERATE EXP RESULT NAME
        - block:
            - name: Construct chaos result name (experiment_name)
              set_fact:
                c_experiment: "{{ lookup('env','CHAOSENGINE') }}-{{ c_experiment }}"
          when: lookup('env','CHAOSENGINE')

        # RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - include_tasks: "/utils/runtime/update_chaos_result_resource.yml"
          vars:
            status: 'SOT'
            namespace: "{{ c_ns }}"

        ## PRE-CHAOS APPLICATION LIVENESS CHECK
        - name: Verify that the AUT (Application Under Test) is running
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_lkey: "{{ a_label.split('=')[0] }}"
            app_lvalue: "{{ a_label.split('=')[1] }}"
            delay: 5
            retries: 60
          when: "a_check == 'true'"

        # Gcloud authentication
        - name: Gcloud authentication
          include_tasks: "/utils/cloud/gcp/gcloud_configure.yml"
          when: "cloud_platform == 'GCP'"

        ## PRE-CHAOS DISK LIVENESS CHECK
        - name: Verify that the disk is connected to node (pre)
          include_tasks: "/utils/cloud/gcp/status_disk.yml"

        # Checking disk is attached to node
        - debug: 
            msg: echo "disk attached"   
          when: "inuse == true"

         ## INJECTING CHAOS 
        - name: Injecting the chaos
          include_tasks: "{{ c_util }}"
            
        # POST-CHAOS APPLICATION LIVENESS CHECK
        - name: Verify AUT liveness post fault-injection
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}" 
            app_lkey: "{{ a_label.split('=')[0] }}"
            app_lvalue: "{{ a_label.split('=')[1] }}"       
            delay: 1
            retries: 60   
          when: "a_check == 'true'"

        ## POST-CHAOS DISK LIVENESS CHECK
        - name: Verify that the disk is connected to node (post)
          include_tasks: "/utils/cloud/gcp/status_disk.yml"

        # Checking disk is attached to node
        - debug: 
            msg: echo "disk attached"   
          when: "inuse == true"

        - set_fact:
            flag: "Pass"

      rescue:

        - set_fact:
            flag: "Fail"

      always:

        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
        - include_tasks: "/utils/runtime/update_chaos_result_resource.yml"
          vars:
            status: 'EOT'
            namespace: "{{ c_ns }}"