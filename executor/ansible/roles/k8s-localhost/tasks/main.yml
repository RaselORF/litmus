---
## K8S-LOCALHOST PREPARATION

- name: Install APT Packages
  apt: 
    name: "{{item}}"
    state: present
  with_items: "{{deb_local_packages}}"
  become: true
  delegate_to: 127.0.0.1

- name: Install PIP Packages
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ pip_local_packages }}"
  delegate_to: 127.0.0.1
  become: true 

## Common preparation tasks

- name: Create files directory in kubernetes role
  file:
    path: "{{ playbook_dir }}/roles/{{item}}/files"
    state: directory
    mode: 0755
  with_items:
    - kubernetes
    - k8s-master
    - k8s-hosts

## kubernetes role preparation

- name: Get .deb package details
  shell: "curl -s https://packages.cloud.google.com/apt/dists/kubernetes-xenial/main/binary-amd64/Packages | grep _{{ k8s_version }} | awk '{print $2}' | cut -d '/' -f2"
  register: k8s_deb_packages

- name: Get .deb kubernetes packages google cloud 
  get_url: 
    url: "https://packages.cloud.google.com/apt/pool/{{ item.0 }}"
    dest: "{{ playbook_dir }}/roles/kubernetes/files/{{item.1}}"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3
  with_together: 
    - "{{ k8s_deb_packages.stdout_lines }}"
    - "{{ k8s_deb_package_alias }}"

- name: Get CNI .deb package from google cloud
  get_url:
    url: "{{k8s_cni_deb_package}}"
    dest: "{{ playbook_dir }}/roles/kubernetes/files/kubernetes-cni.deb"
    force: yes
  register: result
  until: "'OK' in result.msg"
  delay: 5
  retries: 3

- name: Check whether deb packages and images are already downloaded
  stat: 
    path: "{{ playbook_dir }}/roles/kubernetes/files/k8s_images_{{ k8s_version }}.tar"
  register: stat_result

- block:
    - name: Fetch K8s images from gcr.io/google_containers
      docker_image: 
        name: "{{item}}"
        state: present
        pull: true
        force: yes
      register: result
      until: "'Pulled image' and item in result.actions[0]"
      delay: 60
      retries: 3  
      with_items: "{{ k8s_images }}"
      become: true

    - name: Print K8s image names
      shell: printf "{{ item }}\n" >> imagelist.tmp
      with_items: "{{ k8s_images }}"

    - name: TAR the K8s images 
      shell: docker save $(cat imagelist.tmp) -o k8s_images_{{ k8s_version }}.tar
      become: true

    - name: Remove the .tmp file created to hold image list
      file: path="{{playbook_dir}}/imagelist.tmp" state=absent

    - name: Move K8s_images_{{ k8s_version }}.tar into kubernetes role
      shell: mv {{playbook_dir}}/k8s_images_{{ k8s_version }}.tar {{ playbook_dir }}/roles/kubernetes/files
      become: true

    - name: Remove K8s images from K8s-localhost
      docker_image:
        name: "{{ item }}" 
        state: absent
      with_items: "{{ k8s_images }}"
      become: true
  
  when: stat_result.stat.exists == false 

## K8S-MASTER ROLE PREPARATION

#- name: Get Log Aggregator
#  get_url:
#    url: "{{k8s_log_aggregator_url}}"
#    dest: "{{ playbook_dir }}/roles/k8s-master/files/{{k8s_log_aggregator}}"
#    force: yes
#  register: result
#  until: "'OK' in result.msg"
#  delay: 5
#  retries: 3

- name: Fetch configure_K8s scripts into k8s-master role
  get_url: 
    url: "{{ item }}"
    dest: "{{ playbook_dir }}/roles/k8s-master/files"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3 
  with_items: "{{ k8s_master_scripts }}"

- name: Change Kubernetes version in configure scripts
  replace:
    path: "{{ playbook_dir }}/roles/k8s-master/files/configure_k8s_master.sh"
    regexp: "kubeversion=\"v[1-9].[0-9].[0-9]\""
    replace: "kubeversion=\"v{{ k8s_version }}\""

- block: 
    - name: Fetch weave images from dockerhub
      docker_image:
        name: "{{ item }}"
        state: present
        pull: true
        force: yes
      register: result
      until: "'Pulled image' and item in result.actions[0]"
      delay: 60
      retries: 3
      with_items: "{{ weave_images }}" 
      become: true

    - name: Print weave image names
      shell: printf "{{ item }}\n" >> imagelist.tmp
      with_items: "{{ weave_images }}"

    - name: TAR the weave images
      shell: docker save $(cat imagelist.tmp) -o weave_images_{{ weave_version }}.tar
      become: true

    - name: Remove the .tmp file created to hold image list
      file: path="{{playbook_dir}}/imagelist.tmp" state=absent

    - name: Move weave_images_{{ weave_version }}.tar into k8s-master role
      shell: mv {{playbook_dir}}/weave_images_{{ weave_version }}.tar {{ playbook_dir }}/roles/k8s-master/files
      become: true

    - name: Remove weave images from K8s-localhost
      docker_image:
        name: "{{ item }}" 
        state: absent
      with_items: "{{ weave_images }}"
      become: true
  
  when: stat_result.stat.exists == false

- name: Fetch the weave .yaml template from GitHub
  get_url:
    url: "{{ weave_template_link }}"
    dest: "{{ playbook_dir }}/roles/k8s-master/files"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3

## K8S-HOSTS ROLE PREPARATION

- name: Fetch configure_K8s scripts into k8s-host role
  get_url:
    url: "{{ item }}"
    dest: "{{ playbook_dir }}/roles/k8s-hosts/files"
    force: yes
  register: result
  until:  "'OK' in result.msg"
  delay: 5
  retries: 3 
  with_items: "{{ k8s_host_scripts }}"

- name: Get Current User
  command: whoami 
  register: user

- name: Change Folder Permissions
  file:
    path: "{{ item }}"
    owner: "{{ user.stdout }}"
    group: "{{ user.stdout }}"
    recurse: true
  become: true
  with_items:
    - "{{ playbook_dir }}/roles/k8s-hosts/files"
    - "{{ playbook_dir }}/roles/k8s-master/files"
    - "{{ playbook_dir }}/roles/kubernetes/files"
