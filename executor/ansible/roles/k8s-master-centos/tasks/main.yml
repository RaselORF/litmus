---
- name: Get Current User
  command: whoami
  register: user

- stat:
    path: "{{ weave_images_path }}"
  register: status

- name: Create Directory
  file:
    path: "{{ weave_images_path }}"
    state: directory
  become: true
  when: status.stat.isdir is not defined

- stat:
    path: "{{ weave_images_path }}"
  register: status

- name: Change Folder Permissions
  file:
    path: "{{ weave_images_path }}"
    owner: "{{ user.stdout }}"
    group: "{{ user.stdout }}"
    recurse: true
  become: true
  when: status.stat.isdir is defined and status.stat.isdir

- stat:
    path: "{{ k8s_logs_path }}"
  register: status

- name: Create Directory
  file:
    path: "{{ k8s_logs_path }}"
    state: directory
  become: true
  when: status.stat.isdir is not defined

- stat:
    path: "{{ k8s_logs_path }}"
  register: status

- name: Change Folder Permissions
  file:
    path: "{{ k8s_logs_path }}"
    owner: "{{ user.stdout }}"
    group: "{{ user.stdout }}"
    recurse: true
  become: true
  when: status.stat.isdir is defined and status.stat.isdir

- name: Copy log aggregator to remote
  copy:
    src: "{{ k8s_log_aggregator }}"
    owner: "{{ user.stdout }}"
    group: "{{ user.stdout }}"
    dest: /usr/local/bin
    mode: "u+rwx"
  become: true

- block:
   - name: Copy Pod YAML to remote
     copy:
       src: "{{ weave_depends[1] }}"
       dest: "{{ weave_images_path }}"

   - name: Copy Script to remote
     copy:
       src: "{{ configure_scripts[1] }}"
       dest: "{{ k8s_images_path }}"
       mode: "u+rwx"

   - name: Copy TAR to remote
     copy:
       src: "{{ weave_depends[0] }}"
       dest: "{{ weave_images_path }}"
     become: true

   - name: Load k8s images from Archive
     command: docker load --input "{{ k8s_images }}"
     args:
       chdir: "{{ k8s_images_path }}"
     become: true

   - name: Load weave images from Archive
     command: docker load --input "{{ weave_depends[0] }}"
     args:
       chdir: "{{ weave_images_path }}"
     become: true

   - name: Install rpmd packages
     yum:
       name: "{{ k8s_images_path }}/{{ item }}"
     with_items: "{{ k8s_rpmd_packages }}"
     become: true
 
   - name: kubeadm reset before init
     command: kubeadm reset
     become: true
  
   - name: Copy the volume claim to kube master
     copy:
       src: "{{ k8s_conf }}"
       dest: "{{ sysctl_path }}"
     become: true
 
   - name:
     shell: |
       sed -i -E 's/--cgroup-driver=systemd/--cgroup-driver=cgroupfs/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
       sysctl --system
       systemctl start kubelet && systemctl enable kubelet
     become: true

   - name: kubeadm init
     script: "{{ configure_scripts[0] }}"
     become: true

  when: build_type == "normal"

- block:
   - name: Change file modes
     file:
       path: "{{k8s_images_path}}/{{item}}"
       mode: "u+rwx"
     become: true
     with_items: "{{ configure_scripts}}"

   - name: kubeadm init
     shell: "{{ k8s_images_path }}/{{ configure_scripts[0] }}"
     args:
       executable: /bin/bash
     become: true
  when: build_type == "quick"

- name: Get Current User
  command: whoami
  register: user

- name: Copy k8s credentials to $HOME 
  copy:
    src: "/etc/kubernetes/admin.conf" 
    remote_src: True
    dest: "{{ ansible_env.HOME}}"
  become: true

- name: Change file permissions
  file:
    path: "{{ ansible_env.HOME }}"
    owner: "{{ user.stdout }}"
    group: "{{ user.stdout }}"     
    state: directory
  become: true

- name: Update KUBECONFIG in .profile
  lineinfile:
    destfile: "{{ansible_env.HOME}}/.bash_profile"
    line: export KUBECONFIG=$HOME/admin.conf
    state: present

- name: Patch kube-proxy for CNI Networks
  shell: source ~/.bash_profile; "{{ k8s_images_path }}/{{ configure_scripts[1] }}" 
  args:
    executable: /bin/bash
  when: build_type == "normal"

- name: Patch kube-proxy for CNI Networks
  shell: source ~/.bash_profile; "{{ k8s_images_path }}/{{ configure_scripts[1] }}"
  args:
    executable: /bin/bash
  when: build_type == "quick"
