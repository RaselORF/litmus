---
- name: Get the Test item from Test Job List
  set_fact: 
    test: "{{ item }}"

- block:

    - name: Replace the storage class based on provider
      replace:
        path: "{{ test }}"  
        regexp: "openebs-standard"
        replace: "{{ storage_class }}"

    - name: Get $HOME of K8s master for kubernetes user
      shell: source ~/.profile; echo $HOME
      args:
        executable: /bin/bash
      register: result_kube_home
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
   
    - name: Copy the test job spec into master
      copy: 
        src: "{{ test }}" 
        dest: "{{ result_kube_home.stdout }}"
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
 
    - name: Run the test Kubernetes job YAML
      shell: source ~/.profile; kubectl apply -f run_litmus_test.yaml
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

    - name: Verify the test Kubernetes job is Successful
      # Using a default job name "litmus"
      # Is it better to check "Completed" v/s "Successful"
      shell: >
        source ~/.profile; 
        kubectl get job litmus --no-headers
        -n litmus -o custom-columns=:status.succeeded
      args:
        executable: /bin/bash
      register: result
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      until: "result.stdout|int == 1"
      delay: 120
      retries: 10

    - name: Delete test Kubernetes job
      # Using a default job name "run_litmus_test.yaml"  
      shell: source ~/.profile; kubectl delete -f run_litmus_test.yaml
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
    
    - name: Verify job is deleted successfully
      # Using a default job name "litmus"
      shell: >
        source ~/.profile; 
        kubectl get job --no-headers 
        -n litmus -o custom-columns=:metadata.name
      args:
        executable: /bin/bash
      delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
      until: "'litmus' not in result.stdout"
     
  rescue: 
    - name: Handle job failure 
      debug: 
        msg: "Unable to complete test, please examine the job spec for {{ test }}" 
  
  always: 
    - name: Message b/w test job runs 
      debug: 
        msg: "Moving to next test..."
