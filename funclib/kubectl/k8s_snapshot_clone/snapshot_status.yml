---
    - name: Display details
      debug:
        msg:
          - "app_ns: {{ app_ns }}"
          - "snap_name: {{ snapshot_name }}"
          - "pvc_name: {{ pvc_name }}"

    - block:
        - name: Check if the snapshot is created successfully
          shell: kubectl describe volumesnapshot {{ snap_name }} -n {{ app_ns }} | grep Message
          args:
            executable: /bin/bash
          register: sp_out
          until: "'Snapshot created successfully' in sp_out.stdout"
          delay: 30
          retries: 15

        - name: Obtain the snapshot data name 
          shell: kubectl get volumesnapshot {{ snap_name }} -n {{ app_ns }} -o jsonpath='{.spec.snapshotDataName}'
          args:
            executable: /bin/bash
          register: snap_status
          failed_when: snap_status.stdout == ""

        - name: Get the snapshot id from volumesnapshotdata
          shell: kubectl get volumesnapshotdata {{ snap_status.stdout }} -o jsonpath='{.spec.openebsVolume.snapshotId}'
          args:
            executable: /bin/bash
          register: snapid

        - name: Form the snap name being rebuilt.
          set_fact:
            snapid_name: "{{ pv.stdout }}@{{snapid.stdout}}"

      when: action == "Success"

    - block:

        - name: Check whether the status of snapshot 
          shell: kubectl get volumesnapshot {{ snap_name }} -n {{ app_ns }} -o jsonpath='{.spec.snapshotDataName}'
          args:
            executable: /bin/bash
          register: snap_status
          failed_when: snap_status.stdout != "" 

      when: action == "Failure"
