- name: Derive PV from application PVC 
  shell: >
    kubectl get pvc {{ app_pvc }}
    -o custom-columns=:spec.volumeName -n {{ app_ns }}
    --no-headers
  args:
    executable: /bin/bash
  register: pv

- name: Record the jiva controller deployment of the PV
  set_fact: 
    # Depends on the naming convention in maya-apiserver (<pv-id>-rep)  
    jiva_controller_deploy: "{{ pv.stdout }}-ctrl"

- name: Get the resourceVersion of the target deploy before fault injection
  shell: >
    kubectl get deploy {{ jiva_controller_deploy }} -n {{ app_ns }} 
    -o=custom-columns=NAME:".metadata.resourceVersion" --no-headers
  args:
    executable: /bin/bash
  register: rv_bef

- name: Get jiva controller pod belonging to the PV
  shell: > 
    kubectl get pods -l openebs.io/controller=jiva-controller
    -n {{ app_ns }} -o=custom-columns=NAME:".metadata.name" --no-headers
  args:
    executable: /bin/bash
  register: jiva_controller_pod

- name: Kill the jiva controller pod 
  shell: >
    kubectl delete pod {{ jiva_controller_pod.stdout }} -n {{ app_ns }}
  args:
    executable: /bin/bash

- name: Wait for 10s post fault injection 
  wait_for:
    timeout: 10  

- name: Get the resourceVersion of the target deploy after fault injection
  shell: >
    kubectl get deploy {{ jiva_controller_deploy }} -n {{ app_ns }}
    -o=custom-columns=NAME:".metadata.resourceVersion" --no-headers 
  args:
    executable: /bin/bash
  register: rv_aft

- name: Compare resourceVersions of target deployment
  debug:
    msg: "Verified target pods were restarted by fault injection"
  failed_when: "rv_bef.stdout | int == rv_aft.stdout | int"    

