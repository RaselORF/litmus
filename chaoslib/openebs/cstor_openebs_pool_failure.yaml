- name: Derive PV from application PVC 
  shell: >
    kubectl get pvc {{ app_pvc }}
    -o custom-columns=:spec.volumeName -n {{ app_ns }}
    --no-headers
  args:
    executable: /bin/bash
  register: pv

- name: Derive SC from application PVC 
  shell: >
    kubectl get pvc {{ app_pvc }} -n {{ app_ns }}
    -o json | jq '.spec.storageClassName'
  args:
    executable: /bin/bash
  register: sc

- name: Get the pool deployment of SC
  shell: >
    kubectl get deployment -n {{ operator_ns }}
    -l openebs.io/storage-pool-claim={{ sc.stdout }}
    --no-headers | shuf -n1 | awk '{print $1}'
  args:
    executable: /bin/bash
  register: pool_deployment

- name: Get the resourceVersion of pool deployment
  shell: >
    kubectl get deployment {{ pool_deployment.stdout }}
    -n {{ operator_ns }} -o json | jq '.metadata.resourceVersion'
  args:
    executable: /bin/bash
  register: pool_deployment_revisionSource_before

- name: Get the pod of pool deployment
  shell: >
    kubectl get pods -n {{ operator_ns }} |
    grep {{ pool_deployment.stdout }} | grep -w "Running" | awk '{print $1}'
  args:
    executable: /bin/bash
  register: cstor_pool_pod

- name: Delete the cstor pool pod for reschedule
  shell: >
    kubectl delete pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }}
  args:
    executable: /bin/bash

- name: Check for pool pod in running state
  shell: >
    kubectl get pods -n {{ operator_ns }} |
    grep {{ pool_deployment.stdout }} | grep -v {{ cstor_pool_pod.stdout }} |
    grep -w "Running" | wc -l
  args:
    executable: /bin/bash
  register: cstor_pool_pod_cnt
  until: "cstor_pool_pod_cnt.stdout | int == 1 | int"
  delay: 30
  retries: 10

- name: Get resourceVersion after pod delete
  shell: >
    kubectl get deployment {{ pool_deployment.stdout }}
    -n {{ operator_ns }} -o json | jq '.metadata.resourceVersion'
  args:
    executable: /bin/bash
  register: pool_deployment_revisionSource_after

- name: Compare resourceVersions
  debug:
    msg: "Verified pool pods were restarted by fault injection"
  failed_when: "pool_deployment_revisionSource_before.stdout | int == pool_deployment_revisionSource_after.stdout | int"
