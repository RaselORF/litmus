- name: Randomly select the pool deployment from cvr
  shell: >
    kubectl get cvr -n {{ operator_ns }}
    -l openebs.io/persistent-volume={{ pv.stdout }} --no-headers
    -o=jsonpath='{range .items[*]}{.metadata.labels.cstorpool\.openebs\.io\/name}{"\n"}{end}' |
    shuf -n1 | awk '{print $1}'
  args:
    executable: /bin/bash
  register: pool_deployment

- name: Get the resourceVersion of pool deployment, not required
  shell: >
    kubectl get deployment {{ pool_deployment.stdout }}
    -n {{ operator_ns }} -o=jsonpath='{.metadata.resourceVersion}'
  args:
    executable: /bin/bash
  register: pool_deployment_revisionSource_before

- name: Get the pod of pool deployment
  shell: >
    kubectl get pods -n {{ operator_ns }} |
    grep {{ pool_deployment.stdout }} | grep -w "Running" | awk '{print $1}'
  args:
    executable: /bin/bash
  register: cstor_pool_pod

- name: Get the runningStatus of pool pod
  shell: >
    kubectl get pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }}
    -o=jsonpath='{range .status.containerStatuses[*]}{.state}{"\n"}{end}' |
    grep -w running | wc -l
  args:
    executable: /bin/bash
  register: runningStatusCount
  until: "runningStatusCount.stdout == \"2\""
  delay: 30
  retries: 10

- name: Get the restartCount of cstor-pool container
  shell: >
    kubectl get pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }}
    -o=jsonpath='{.status.containerStatuses[?(@.name=="cstor-pool")].restartCount}'
  args:
    executable: /bin/bash
  register: restartCount_before

- include_tasks: /chaoslib/pumba/pod_failure_by_sigkill.yaml
  vars:
    action: "killapp"
    namespace: "{{ operator_ns }}"
    app_pod: "{{ cstor_pool_pod.stdout }}"
    app_container: "cstor_pool"

- name: Check for pool pod in running state
  shell: >
    kubectl get pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }} |
    grep -w "Running" | wc -l
  args:
    executable: /bin/bash
  register: cstor_pool_pod_cnt
  until: "cstor_pool_pod_cnt.stdout == \"1\""
  delay: 30
  retries: 10

- name: Get the runningStatus of pool pod
  shell: >
    kubectl get pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }}
    -o=jsonpath='{range .status.containerStatuses[*]}{.state}{"\n"}{end}' |
    grep -w running | wc -l
  args:
    executable: /bin/bash
  register: runningStatusCount
  until: "runningStatusCount.stdout == \"2\""
  delay: 30
  retries: 10

- name: Get the restartCount of cstor-pool container
  shell: >
    kubectl get pod {{ cstor_pool_pod.stdout }} -n {{ operator_ns }}
    -o=jsonpath='{.status.containerStatuses[?(@.name=="cstor-pool")].restartCount}'
  args:
    executable: /bin/bash
  register: restartCount_after


- name: Get resourceVersion after pod delete, not required
  shell: >
    kubectl get deployment {{ pool_deployment.stdout }}
    -n {{ operator_ns }} -o=jsonpath='{.metadata.resourceVersion}'
  args:
    executable: /bin/bash
  register: pool_deployment_revisionSource_after

- name: Compare restartCounts
  debug:
    msg:
      - "Verified pool pods were restarted by fault injection"
      - "Before: {{ restartCount_before.stdout }}"
      - "After: {{ restartCount_after.stdout }}"
  failed_when: "restartCount_before.stdout|int >= restartCount_after.stdout|int"

