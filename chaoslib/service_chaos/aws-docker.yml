- block:

   - name: Take backup of docker health check interval
     shell: >
       timeout 10 kubectl exec -it {{ svc_chaos_pod.stdout}} -n {{ namespace }}
       -- bash -c "cp /node/opt/kubernetes/helpers/docker-healthcheck /node/opt/kubernetes/helpers/docker-healthcheck.bkp"

   - name: Disable docker health check
     shell: >
       timeout 10 kubectl exec -it {{ svc_chaos_pod.stdout}} -n {{ namespace }}
       -- bash -c "echo '#!/bin/bash\nexit 0' > /node/opt/kubernetes/helpers/docker-healthcheck"

   - name: do svc restart
     shell: >
       timeout 10 kubectl exec -it {{ svc_chaos_pod.stdout}} -n {{ namespace }}
       -- bash -c "systemctl stop {{ svc_chaos }} && sleep {{ c_duration }} && systemctl start {{ svc_chaos }}"
     async: 6000
     poll: 0

   - name: wait to check node status
     shell: >
       sleep 60

   - name: Check node status
     shell: kubectl get nodes {{ app_node }}
     args:
       executable: /bin/bash
     register: node_status
     until: "'NotReady' in node_status.stdout"
     delay: 30
     retries: 10

  when: docker == "crash"

- block:

   - name: Record the svc chaos pod on given app node
     shell: >
       kubectl get pod -l app=svc-chaos -o wide
       -n {{ namespace }} | grep {{ app_node }}
     args:
       executable: /bin/bash
     register: re_svc_chaos_pod
     until: "'Running' in re_svc_chaos_pod.stdout"
     delay: 30
     retries: 10

   - name: Check node status
     shell: kubectl get nodes {{ app_node }}
     args:
       executable: /bin/bash
     register: node_status
     until: "'Ready' in node_status.stdout"
     delay: 30
     retries: 10

   - name: Recover docker health check interval
     shell: >
       timeout 10 kubectl exec -it {{ svc_chaos_pod.stdout}} -n {{ namespace }}
       -- bash -c "mv /node/opt/kubernetes/helpers/docker-healthcheck.bkp /node/opt/kubernetes/helpers/docker-healthcheck"

  when: docker == "recover"
