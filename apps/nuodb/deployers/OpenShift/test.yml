---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

        ## Generating the testname for deployment
        - include_tasks: /common/utils/create_testname.yml

         ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: "/common/utils/update_litmus_result_resource.yml"
          vars:
            status: 'SOT'
       
        - include_tasks: /common/utils/create_ns.yml

        - block:

            - name: Replace the sc placeholder with ENV sc
              replace:
                path: "{{ item }}"
                regexp: 'testsc'
                replace: '{{ storage_class }}'
              with_items:
                - nuodb.yaml 
                - nuodb-sm.yaml

            ## Deploying the nuodb service, domain, sm and te 

            - name: Disable THP for platforms like AWS,OpenShift
              shell: kubectl create -f disable-thp.yaml -n {{ app_ns }}
              args:
                executable: /bin/bash
              when: lookup('env','THP') == 'disable' 

            - name: Deploying NUODB service, domain, storage manager and transaction engines
              shell: kubectl create -f {{ item }} -n {{ app_ns }}
              args:
                executable: /bin/bash
              with_items: "{{ nuodb_spec }}"

            - name: Verify if Nuodb admin, sm and te pods are running
              shell: kubectl get pod -l app={{ item }} -n {{ app_ns }}
              args:
                executable: /bin/bash
              register: result
              with_items: "{{ nuodb_labels }}"
              until: "'Running' in result.stdout"
              delay: 10
              retries: 60

            - set_fact:
                flag: "Pass"  

          when: "'deprovision' not in action"  

        - block:

            - name: Deprovision NUODB service, domain, storage manager and transaction engines
              shell: kubectl delete -f {{ item }} -n {{ app_ns }}
              args:
                executable: /bin/bash
              with_items: "{{ nuodb_spec }}"

            - name: Verify if Nuodb admin, sm and te pods are deleted
              shell: kubectl get pod -l app={{ item }} -n {{ app_ns }}
              args:
                executable: /bin/bash
              register: result
              with_items: "{{ nuodb_labels }}"
              until: "'Running' not in result.stdout"
              delay: 5
              retries: 45

            - set_fact:
                flag: "Pass"  

          when: "'deprovision' is in action"        

      rescue:
        - set_fact:
            flag: "Fail"     

      always:
            ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /common/utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
              
