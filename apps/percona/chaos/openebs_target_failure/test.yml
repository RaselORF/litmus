---
- hosts: localhost
  connection: local

  vars_files:
    - test_vars.yml

  tasks:
    - block:

         ## PRE-CHAOS APPLICATION LIVENESS CHECK
        - include_tasks: /common/utils/application_liveness_check.yml
          when: liveness_label != ''

        - include: test_prerequisites.yml
  
        - include_vars:
            file: chaosutil.yml

        - name: Record the chaos util path
          set_fact: 
            chaos_util_path: "/chaoslib/{{ chaosutil }}"

        ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /common/utils/create_testname.yml

        - include_tasks: /common/utils/update_litmus_result_resource.yml
          vars:
            status: 'SOT'
            chaostype: "{{ chaosutil.split('.')[0] }}"

        ## DISPLAY APP INFORMATION 
 
        - name: Display the app information passed via the test job
          debug: 
            msg: 
              - "The application info is as follows:"
              - "Namespace           : {{ namespace }}"
              - "Target Namespace    : {{ target_namespace }}"
              - "Label               : {{ label }}"
              - "PVC                 : {{ pvc }}"  
              - "StorageClass        : {{ sc }}"

        ## PRE-CHAOS APPLICATION LIVENESS CHECK

        - name: Verify that the AUT (Application Under Test) is running 
          include_tasks: "/common/utils/status_app_pod.yml"
          vars:
            app_ns: "{{namespace}}" 
            app_lkey: "{{ label.split('=')[0] }}"
            app_lvalue: "{{ label.split('=')[1] }}"       
            delay: 5
            retries: 60

        - name: Create some test data in the mysql database
          include_tasks: "/common/utils/mysql_data_persistence.yml"
          vars:
            status: 'LOAD'
            ns: "{{ namespace }}"
            pod_name: "{{ app_pod_name.stdout }}"
            dbuser: 'root'
            dbpassword: 'k8sDem0'
            dbname: 'tdb' 
          when: data_persistance != ''     


        ## STORAGE FAULT INJECTION 

        - include: "{{ chaos_util_path }}"
          app_ns: "{{ namespace }}"
          target_ns: "{{ target_namespace }}"
          app_pvc: "{{ pvc }}"

        ## POST-CHAOS APPLICATION LIVENESS CHECK

        - name: Wait (soak) for I/O on pools 
          wait_for:
            timeout: "{{ chaos_duration }}"

        - name: Verify AUT liveness post fault-injection
          include_tasks: "/common/utils/status_app_pod.yml"
          vars:
            app_ns: "{{namespace}}" 
            app_lkey: "{{ label.split('=')[0] }}"
            app_lvalue: "{{ label.split('=')[1] }}"       
            delay: 5
            retries: 60        


        ## POST-CHAOS APPLICATION LIVENESS CHECK
        - include_tasks: /common/utils/application_liveness_check.yml
          when: liveness_label != ''

        - name: Verify mysql data persistence  
          include_tasks: "/common/utils/mysql_data_persistence.yml"
          vars:
            status: 'VERIFY'
            ns: "{{ namespace }}"
            pod_name: "{{ app_pod_name.stdout }}"
            dbuser: 'root'
            dbpassword: 'k8sDem0'
            dbname: 'tdb' 
          when: data_persistance != ''       

        ## Check application-target pod affinity
        - include_tasks: /common/utils/openebs/target_affinity_check.yml
          vars:
            app_ns: "{{ namespace }}"
            #operator_ns: works by var scope
            app_label: "{{ label }}"
            app_pvc: "{{ pvc }}"

        - set_fact:
            flag: "Pass"

      rescue: 
        - set_fact: 
            flag: "Fail"

      always: 

        ## RECORD END-OF-TEST IN LITMUS RESULT CR
 
        - include_tasks: /common/utils/update_litmus_result_resource.yml
          vars:
            status: 'EOT'
            chaostype: "{{ chaosutil.split('.')[0] }}"
