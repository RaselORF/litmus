---
apiVersion: v1
kind: Namespace
metadata:
  name: litmus
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: litmus-portal-admin-config
  namespace: litmus
data:
  AgentScope: cluster
  AgentNamespace: litmus
  DataBaseServer: "mongodb://mongo-service:27017"
  JWTSecret: "litmus-portal@123"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litmusportal-frontend
  namespace: litmus
  labels:
    component: litmusportal-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      component: litmusportal-frontend
  template:
    metadata:
      labels:
        component: litmusportal-frontend
    spec:
      containers:
        - name: litmusportal-frontend
          image: litmuschaos/litmusportal-frontend:ci
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: litmusportal-frontend-service
  namespace: litmus
spec:
  type: NodePort
  ports:
    - name: http
      port: 9091
      targetPort: 80
  selector:
    component: litmusportal-frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: self-deployer-admin-account
  namespace: litmus
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: deployer-admin
  namespace: litmus
  labels:
    name: deployer-admin
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: deployer-admin-rb
  namespace: litmus
subjects:
  - kind: ServiceAccount
    name: self-deployer-admin-account
    namespace: litmus
roleRef:
  kind: ClusterRole
  name: deployer-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: litmus-server-account
  namespace: litmus
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: litmus-server
  namespace: litmus
  labels:
    name: litmus-server
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: litmus-server-rb
  namespace: litmus
subjects:
  - kind: ServiceAccount
    name: litmus-server-account
    namespace: litmus
roleRef:
  kind: ClusterRole
  name: litmus-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litmusportal-server
  namespace: litmus
  labels:
    component: litmusportal-server
spec:
  replicas: 1
  selector:
    matchLabels:
      component: litmusportal-server
  template:
    metadata:
      labels:
        component: litmusportal-server
    spec:
      containers:
        - name: graphql-server
          image: litmuschaos/litmusportal-server:ci
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: SERVICE_ADDRESS
              value: "http://litmusportal-server-service:9002"
            - name: SELF_CLUSTER
              value: "true"
            - name: SUBSCRIBER_IMAGE
              value: "litmuschaos/litmusportal-subscriber:ci"
            - name: AGENT_SCOPE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentScope
            - name: AGENT_NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: AgentNamespace
            - name: DEPLOYER_IMAGE
              value: "litmuschaos/litmusportal-self-deployer:ci"
            - name: ARGO_SERVER_IMAGE
              value: "argoproj/argocli:v2.9.3"
            - name: ARGO_WORKFLOW_CONTROLLER_IMAGE
              value: "argoproj/workflow-controller:v2.9.3"
            - name: ARGO_WORKFLOW_EXECUTOR_IMAGE
              value: "argoproj/argoexec:v2.9.3"
            - name: LITMUS_CHAOS_OPERATOR_IMAGE
              value: "litmuschaos/chaos-operator:1.8.2"
            - name: LITMUS_CHAOS_RUNNER_IMAGE
              value: "litmuschaos/chaos-runner:1.8.2"
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
        - name: auth-server
          image: litmuschaos/litmusportal-auth-server:ci
          env:
            - name: DB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: DataBaseServer
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: litmus-portal-admin-config
                  key: JWTSecret
            - name: ADMIN_USERNAME
              value: "admin"
            - name: ADMIN_PASSWORD
              value: "litmus"
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
      serviceAccountName: litmus-server-account
---
apiVersion: v1
kind: Service
metadata:
  name: litmusportal-server-service
  namespace: litmus
spec:
  type: ClusterIP
  ports:
    - name: graphql-server
      port: 9002
      targetPort: 8080
    - name: auth-server
      port: 9003
      targetPort: 3000
  selector:
    component: litmusportal-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: litmus
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      component: database
  template:
    metadata:
      labels:
        component: database
    spec:
      containers:
        - name: mongo
          image: mongo:4.2.8
          ports:
            - containerPort: 27017
          imagePullPolicy: Always
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pv-claim
  namespace: litmus
  labels:
    app: mongo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-service
  namespace: litmus
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    component: database
