type WorkflowStat {
  schedules: Int!
  runs: Int!
  expRuns: Int!
}

type AgentStat {
  ns: Int!
  cluster: Int!
  total: Int!
  active: Int!
}

#type Owner {
#  userId: ID!
#  username: String!
#  name: String!
#}

#type MemberStat {
#  owner: Owner!
#  total: Int!
#}

type ProjectData {
  # Name: String!
  workflows: WorkflowStat!
  agents: AgentStat!
  projectId: String!
  # Members   : MemberStat!
}

type TotalCount {
  projects: Int!
  users: Int!
  agents: AgentStat!
  workflows: WorkflowStat!
}

type UsageData {
  projects: [ProjectData]!
  totalEntries: Int!
  totalCount: TotalCount!
}

enum UsageSort {
  AGENTS
  EXPERIMENT_RUNS
  OWNER
  PROJECT
  SCHEDULES
  TEAM_MEMBERS
  WORKFLOW_RUNS
}

input UsageSortInput {
  field: UsageSort!
  descending: Boolean!
}

input UsageQuery {
  pagination: Pagination
  dateRange: DateRange!
  sort: UsageSortInput
  searchProject: String
}
