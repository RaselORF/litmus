enum WorkflowRunStatus {
  ALL
  FAILED
  RUNNING
  SUCCEEDED
  TERMINATED
}

input DateRange {
  startDate: String!
  endDate: String
}

input WorkflowRunFilterInput {
  workflowName: String
  clusterName: String
  workflowStatus: WorkflowRunStatus
  dateRange: DateRange
}

input Pagination {
  page: Int!
  limit: Int!
}

enum WorkflowSortingField {
  NAME
  TIME
}

input WorkflowRunSortInput {
  field: WorkflowSortingField!
  descending: Boolean
}

input GetWorkflowRunsInput {
  projectID: ID!
  workflowRunIDs: [ID]
  workflowIDs: [ID]
  pagination: Pagination
  sort: WorkflowRunSortInput
  filter: WorkflowRunFilterInput
}

type Weightages {
  experimentName: String!
  weightage: Int!
}

type WorkflowRun {
  workflowRunID: ID!
  workflowID: ID!
  clusterName: String!
  weightages: [Weightages!]!
  lastUpdated: String!
  projectID: ID!
  clusterID: ID!
  workflowName: String!
  clusterType: String
  phase: String!
  resiliencyScore: Float
  experimentsPassed: Int
  experimentsFailed: Int
  experimentsAwaited: Int
  experimentsStopped: Int
  experimentsNa: Int
  totalExperiments: Int
  executionData: String!
  isRemoved: Boolean
}

type GetWorkflowsOutput {
  totalNoOfWorkflowRuns: Int!
  workflowRuns: [WorkflowRun]!
}

input WorkflowFilterInput {
  workflowName: String
  clusterName: String
}

input ListWorkflowsInput {
  projectID: ID!
  workflowIDs: [ID]
  pagination: Pagination
  sort: WorkflowSortInput
  filter: WorkflowFilterInput
}

input WorkflowSortInput {
  field: WorkflowSortingField!
  descending: Boolean
}

type Workflow {
  workflowID: String!
  workflowManifest: String!
  cronSyntax: String!
  clusterName: String!
  workflowName: String!
  workflowDescription: String!
  weightages: [Weightages!]!
  isCustomWorkflow: Boolean!
  updatedAt: String!
  createdAt: String!
  projectID: ID!
  clusterID: ID!
  clusterType: String!
  isRemoved: Boolean!
}

type ListWorkflowsOutput {
  totalNoOfWorkflows: Int!
  workflows: [Workflow]!
}
