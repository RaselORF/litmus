# create-gpd.yml
# Description:  This Ansible playbook will create, attach, and mount the GPDs to the specified
# Cluster
# Author: Harshvardhan Karn
###############################################################################################
#Test Steps:
#
# 1. Get Cluster name, if not provided
# 2. Get the nodes name from the specified cluster
# 3. Attach a disk of size 20 GBs on each worker nodes
# 4. Format the disks into ext4 format and mount on each worker nodes 
###############################################################################################

---
- hosts: localhost
  vars:
    json: 
    email: 
    project: 
    cluster_name:

  vars_files:
    - vars.yml

  tasks:

    - block:

        - name: Fetching Cluster Name
          shell: cat ~/logs/clusters
          register: cluster_name
          when: not cluster_name

        - set_fact:
            cluster_name: "{{ cluster_name.stdout }}"
          when: cluster_name.stdout is defined

        - name: get nodes
          command: >
            gcloud compute instances list 
            --filter="metadata.items.key['cluster-name']['value']~'{{cluster_name}}' name~'nodes'" 
            --format json
          register: response

        - set_fact:
            data: "{{ response.stdout }}"

        - local_action:
            module: gce_pd
            credentials_file: "{{ json }}"
            service_account_email: "{{ email }}"
            project_id: "{{ project }}"
            instance_name: "{{item.name}}"
            size_gb: 20
            zone: us-central1-a
            mode: READ_WRITE
            name: "{{item.name + '-' + 'gpd'}}"
          with_items: "{{ data }}"

        - block:

            - name: Mount Disks to the Instances
              shell: >
                gcloud compute --project openebs-ci ssh 
                --zone us-central1-a {{ item.name }} 
                --command "sudo mkfs.ext4 /dev/sdb && sudo mkdir -p /mnt/openebs && sudo mount -o discard,defaults /dev/sdb /mnt/openebs && sudo chmod a+w /mnt/openebs"
              with_items: "{{ data }}"

          when: disk_action == 'format'

        - name: update test status
          set_fact: 
            flag: "Test Passed"

      rescue:

        - name: update test status
          set_fact:
            flag: "Test Failed" 

            
