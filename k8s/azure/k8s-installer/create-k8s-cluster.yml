# Description:  Generates a random name, & creates a bucket, InstanceGroup object and Initializes
# VMs running Kubernetes, in accordance to the node_count specified using kops in Google Cloud
# Author: Harshvardhan Karn
###############################################################################################
#Steps:
#1. Generate a random Name Infix
#2. Create a Resourse Group
#3. Create the Clusters inside the resource group
#4. Generate the kubeconfig file and merge it in ~/.kube/config
#5. Log a file with the name of Cluster inside ~/logs/azure_clusters
###############################################################################################

---
- hosts: localhost
  vars:
    cluster_name:
  tasks:
    - block:

        - name: Generating Random Cluster Name
          shell: python ../../utils/name_generator/namesgenerator.py
          register: cluster_name
          when: not cluster_name

        - set_fact:
            cluster_name: "{{ cluster_name.stdout }}"
          when: cluster_name.stdout is defined

        - name: Creating Resource Group
          shell: az group create -l eastus -n aks-{{ cluster_name }}-rg

        - name: Creating AKS Cluster
          shell: az aks create -n aks-{{ cluster_name }}-cluster  -g aks-{{ cluster_name }}-rg --node-count {{ nodes }} --node-vm-size {{ node_size }} --generate-ssh-key

        - name: Getting Kubeconfig for the AKS Cluster
          shell: az aks get-credentials --resource-group aks-{{ cluster_name }}-rg --name aks-{{ cluster_name }}-cluster

        - name: Logging Cluster Name
          lineinfile:
            create: yes
            state: present
            path: "~/logs/azure_clusters"
            line: "{{ cluster_name }}"

        - name: Test Passed
          set_fact:
            flag: "Test Passed"

      rescue:
        - name: Set Test Status
          set_fact:
            flag: "Test Failed"

        - fail:
            msg: "Cluster creation failed"
