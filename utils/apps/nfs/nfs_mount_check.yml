---
- block:
    - name: Deriving the PVC Name of the application pod
      shell: >
        kubectl get pods -n {{ a_ns }} -l {{ a_label }}
        -o jsonpath="{.items[0].spec.volumes[0].persistentVolumeClaim.claimName}"
      register: pvc

    - name: Getting the application volume
      shell: kubectl get pvc {{ pvc.stdout }} -n {{ a_ns }} -o jsonpath='{.spec.volumeName}'
      register: volume

    - name: Getting the NFS Provisioner service IP
      shell: kubectl get svc {{ nfs_svc }} -n {{ nfs_provisioner_ns }} -o jsonpath={.spec.clusterIP}
      register: nfs_svc_ip

    - name: Patch volume and nfs_svc_ip
      template:
        src: /utils/apps/openebs/nfs-liveness-exporter.j2
        dest: /utils/apps/openebs/nfs-liveness-exporter.yaml

    - debug: msg="{{ lookup('file', '/utils/apps/openebs/nfs-liveness-exporter.yaml') }}"

    - name: Creating nfs mount liveness check application
      shell: kubectl apply -f /utils/apps/openebs/nfs-liveness-exporter -n {{ a_ns }}
  when: "state == 'START'"

- name: Waiting util the nfs mount liveness check application is in runing state
  include_tasks: "/utils/common/status_app_pod.yml"
  vars:
    app_ns: "{{ a_ns }}"
    app_label: "name=nfs-mount-liveness-check-{{ run_id }}"      
    delay: 2
    retries: 90

- block:
    - name: Deleting the nfs-alpine Application
      shell: kubectl delete -f /utils/apps/openebs/nfs-mount-liveness-check.yaml
  when: "state == 'END'"